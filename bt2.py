import bluetooth
# devices = discover_devices()
# for device in devices:
#     print([_ for _ in find_service(address=device) if 'RFCOMM' in _['protocol'] ])
# # now manually select the desired device or hardcode its name/mac whatever in the script
# bt_addr = "D0:04:01:13:5E:FD"
# port = [_ for _ in find_service(address=bt_addr) if 'RFCOMM' in _['protocol']][0]['port']
# print str(port)
# s = BluetoothSocket(RFCOMM)
# s.connect((bt_addr, port))
# s.send("Hello World!")
# print 'BLOCKING NOW'
# while True:
#     pass

# services=find_service(name="Tam", 
#                             uuid="68e51b30-c8ae-11e8-b568-0800200c9a66")

# print (len(services))
# for i in range(len(services)):
#     match = services[i]
#     print(match["name"])
#     print(match["host"])
#     print(match["port"])

name="bt_server"
target_name="test"
# some random uuid, generated by https://www.famkruithof.net/uuid/uuidgen
uuid="0fee0450-e95f-11e5-a837-0800200c9a66"

def runServer():
    # you had indentation problems on this line:
    serverSocket=bluetooth.BluetoothSocket(bluetooth.RFCOMM)
    port=1

    try:
        serverSocket.bind(("",port))
    except:
        pass

    print "Listening for connections on port: ", port   

    # wait for a message to be sent to this socket only once
    serverSocket.listen(1)
    port=serverSocket.getsockname()[1]
    print "New port: ", port
   
    # you were 90% there, just needed to use the pyBluez command:
    bluetooth.advertise_service( serverSocket, "SampleServer",
                        service_id = uuid,
                        service_classes = [ uuid, bluetooth.SERIAL_PORT_CLASS ],
                        profiles = [bluetooth.SERIAL_PORT_PROFILE] 
                        )

    inputSocket, address=serverSocket.accept()
    print "Accepted connection"
    print "Got connection with" , address
    data=inputSocket.recv(1024)
    print "received [%s] \n " % data    
    inputSocket.close()
    serverSocket.close()  

while True:
    try:
        runServer()
    except bluetooth.btcommon.BluetoothError:
        print "Conection Terminated. Opening socket again..."
        pass